#include<bits/stdc++.h>
#define rep(i,start,lim) for(int i=start;i<lim;i++)
#define repd(i,start,lim) for(int i=start;i>=lim;i--)
#define scan(x) scanf("%d",&x)
#define print(x) printf("%d ",x)
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define br printf("\n")
#define sz(a) lld((a).size())
#define YES printf("YES\n")
#define NO printf("NO\n")
#define all(c) (c).begin(),(c).end()
using namespace std;
#define INF         1011111111
#define LLINF       1000111000111000111LL
#define EPS         (double)1e-10
#define MOD         1000000007
#define PI          3.14159265358979323
using namespace std;
typedef long double ldb;
typedef long long lld;
lld powm(lld base,lld exp,lld mod=MOD) {lld ans=1;while(exp){if(exp&1) ans=(ans*base)%mod;exp>>=1,base=(base*base)%mod;}return ans;}
typedef vector<lld> vlld;
typedef pair<lld,lld> plld;
typedef map<lld,lld> mlld;
typedef set<lld> slld;
#define N 1001
int a[N][N],n,m;
struct BitSet{
    static const int ChainSz = 16;
    uint64_t bs[ChainSz];
    BitSet() {
    	Reset();
    }
    void Reset(){
    	memset(bs, 0, sizeof(bs));
    }
    void Set(int K){
        bs[K >> 6] |= 1ULL << (K & 63);
    }
    bool Check(BitSet &x){
        lld ret = 0;
        rep(i,0,ChainSz) {
            ret += __builtin_popcountll(bs[i] & x.bs[i]);
            if(ret >= 2) return true;
        }
        return false;
    }
} bit[N];
bool check(int x) {
	rep(i,1,n+1) bit[i].Reset();
	rep(i,1,n+1) {
		rep(j,1,m+1) if(a[i][j]>=x) bit[i].Set(j);
		rep(j,1,i) if(bit[i].Check(bit[j])) return 1;
	}
	return 0;
}
int main() {
	int low=0,high=MOD,mid;
	scan(n),scan(m);
	rep(i,1,n+1) rep(j,1,m+1) scan(a[i][j]);
	while(high-low>1) {
		mid=(low+high)/2;
		check(mid) ? low=mid : high=mid;
	}
	cout<<low;
	return 0;
}
